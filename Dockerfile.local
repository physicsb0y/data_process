# build stage
FROM python:3.12-alpine as builder

# Set environment variables
ENV PYTHONUNBUFFERED=1


# set working directory
WORKDIR /app


# install system dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    postgresql-dev \
    python3-dev


RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"


# install python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt


# clean up .pyc files
RUN find /opt/venv -type f -name '*.pyc' -delete



# final stage
FROM python:3.12-alpine

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/opt/venv/bin:$PATH"


#install runtime dependencies
RUN apk add --no-cache libpq


# set working directory
WORKDIR /app


# copy venv from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"


# Copy application code 
COPY . .


# copy and set up entrypoint
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

EXPOSE 8000

ENTRYPOINT [ "/entrypoint.sh" ]
